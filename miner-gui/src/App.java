import java.awt.EventQueue;import java.util.ArrayList;import javax.swing.DefaultComboBoxModel;import javax.swing.JOptionPane;import javax.swing.JTextArea;import javax.swing.text.BadLocationException;import javax.swing.text.Document;import javax.swing.text.Element;import jp.nyatla.minya.MinyaException;import jp.nyatla.minya.MinyaLog;import jp.nyatla.minya.SingleMiningChief;import jp.nyatla.minya.connection.IMiningConnection;import jp.nyatla.minya.connection.StratumMiningConnection;import jp.nyatla.minya.worker.CpuMiningWorker;import jp.nyatla.minya.worker.IMiningWorker;/** * Windowを制御するクラス * @author nyatla * */public class App{	final static String VERSION="GUIMiNya/0.1.2";	final static String VERSION_MSG=App.VERSION+" - sCrypt CPU Miner"+"\n"+			"(c)2009 pooler http://www.litecoinpool.org/miner\n"+			"(c)2013 nyatla https://github.com/nyatla/JMiNya";	class MyLog implements MinyaLog.ILogOutput	{		public MyLog()		{		}		@Override		public void println(int level,String s)		{			System.out.println(s);		}	}	final static String STR_BTN_STOP="Stop Mining";	final static String STR_BTN_START="Start Mining";	private enum State	{		STARTED,		STOPPED	}	private SingleMiningChief _smc;	private State _state;	public App()	{		MinyaLog.setOutput(new MyLog());		this._state=State.STOPPED;		MinyaLog.message(App.VERSION_MSG);	}	private final static int NUMBER_OF_CONSOLE=100;/*    private static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");	public void addLog(String s)	{		JTextArea ja=this._ui.log_area;        //現在日時を取得する        Calendar c = Calendar.getInstance();        //フォーマットパターンを指定して表示する        String d="["+sdf.format(c.getTime())+"]";		ja.append(d+s+"\n");	    final Document doc = ja.getDocument();	    final Element root = doc.getDefaultRootElement();		    EventQueue.invokeLater(new Runnable(){		      @Override public void run() {	    	    try {	    		    for(int i=root.getElementCount()-NUMBER_OF_CONSOLE-1;i>=0;i--){	    	    	    Element fl = root.getElement(0);	    		    	doc.remove(0, fl.getEndOffset());	    		    }				} catch (BadLocationException e){				}	    	  		      }		    });	    ja.setCaretPosition(doc.getLength());	}*/	private void startMining() throws MinyaException	{		String url="Put here your stratum url";		String name="Put here your worker name";		String pass="Put here your worker password";		int threads=8;		//マイナー起動		IMiningConnection mc=new StratumMiningConnection(url,name,pass);		IMiningWorker imw=new CpuMiningWorker(threads);		this._smc=new SingleMiningChief(mc,imw);		this._smc.startMining();		MinyaLog.message(			"Start Mining\n"+				"Thread :"+threads+"\n"+				"Server :"+url+"\n"+				"Worker :"+name+"@"+pass+"\n"			);		this._state=State.STARTED;		return;	}	private void stopMining() throws MinyaException	{		this._smc.stopMining();		this._state=State.STOPPED;			MinyaLog.message("Stop Mining.");		return;	}	public void onStartClick()	{		try{			switch(this._state){			case STOPPED:				this.startMining();				break;			case STARTED:				//マイナー停止				this.stopMining();				break;			default:				break;			}		}catch(Exception e){			MinyaLog.message("Error!:"+e.getMessage());		}	}	/**	 * アプリケーションを終了するとき	 */	public void finish(){		try{			switch(this._state){			case STARTED:				//マイナー停止				this.stopMining();				break;			default:				break;			}		}catch(MinyaException e){			e.printStackTrace();		}	}	public void changeURL(int selectedIndex) {		// TODO Auto-generated method stub			}}